---
import Icon from "./Icon.astro";

export const getStaticPaths = () => {
    return [
        { params: { path: "" } },
        { params: { path: "works" } },
        { params: { path: "about" } },
    ];
};

const { path } = Astro.params;
const { navList = [], mobile } = Astro.props;
---

<script define:vars={{ path }}>
    const links = document.querySelectorAll(".nav-list>li>a");

    document.addEventListener("DOMContentLoaded", () => {
        for (const link of links) {
            console.log(
                "/" + window.location.pathname.split("/")[1],
                link.pathname,
            );

            if (
                ("/" + window.location.pathname.split("/")[1]).includes(
                    link.pathname,
                )
            ) {
                link.classList.add("active");
            }
        }
    });
</script>

<ul class={mobile ? "nav-list mobile" : "nav-list"}>
    {
        navList.map((link) => (
            <li>
                <a href={link.path}>
                    {mobile && <Icon name={link.mobileIcon} isThemed />}
                    {link.title}
                </a>
            </li>
        ))
    }
</ul>

<style>
    ul {
        padding: 0px;
    }

    a {
        color: var(--textColor);
        text-decoration: none;
        display: inline-block;
        margin: 0px 0.5rem;
        font-size: 12px;
        letter-spacing: 1px;
        position: relative;
        font-weight: 600;
        text-transform: uppercase;
        line-height: 1.4;
    }

    a::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: var(--accentColor);
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
        -webkit-transform-origin: right bottom;
        transform-origin: right bottom;
        -webkit-transition: -webkit-transform 0.6s
            cubic-bezier(0.19, 1, 0.22, 1);
        transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
    }

    a.active::after {
        height: 1px;
    }

    a:hover::after,
    a.active::after {
        background-color: var(--accentColor);
        -webkit-transition-duration: 0.4s;
        transition-duration: 0.4s;
        -webkit-transform: scaleX(1);
        transform: scaleX(1);
        -webkit-transform-origin: left bottom;
        transform-origin: left bottom;
    }

    a.mobile {
        text-align: center;
        padding: 0.75rem 1rem;
        background: none;
        font-size: 14px;
        border-radius: var(--borderRadius);
        transition: transform 0.18s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    a.mobile::after {
        display: none;
    }

    a.mobile:hover {
        transform: scale(0.9);
        background-color: rgba(112, 117, 121, 0.08);
        color: var(--textColor);
    }

    .nav-list > li {
        display: inline;
    }

    .nav-list.mobile.active {
        opacity: 1;
        visibility: visible;
        transform: scale(1);
    }

    .nav-list.mobile {
        height: max-content;
        width: 180px;
        -webkit-touch-callout: none;
        backdrop-filter: blur(50px);
        -webkit-backdrop-filter: blur(50px);
        background-color: var(--menuBackgroundColor);
        border-radius: var(--borderRadius);
        box-shadow: var(--cardShadow);
        border: var(--navBorder);
        opacity: 0;
        margin: 0px;
        padding: 0.5rem 0rem;
        list-style: none;
        display: flex;
        flex-direction: column;
        transform-origin: top right;
        transform: scale(0.8);
        transition:
            opacity 0.18s cubic-bezier(0.4, 0, 0.2, 1),
            transform 0.18s cubic-bezier(0.4, 0, 0.2, 1),
            visibility 0.18s cubic-bezier(0.4, 0, 0.2, 1),
            background-color var(--transition);
        visibility: hidden;
        z-index: 1000;
    }

    .nav-list.mobile li {
        display: contents;
    }
</style>
